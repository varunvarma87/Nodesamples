/*global describe:true, it:true, before:true, after:true */
"use strict";

var assert = require('assert'),
	nemoFactory = require('nemo-mocha-factory');
//(new NemoFactory.factory());

describe('@nemo-jaws.user@', function () {
	//console.log(process.cwd())
	nemoFactory({"plugins": {
		"plugins": {
			"user": {
				"module": process.cwd() + "/plugin/user"
			}
		}
	}, "setup": {
		"user": {
			"us": {
				"country": "US"
			}
		}
	}});
	it('should create a user', function (done) {
		assert(nemo && nemo.user && nemo.user.users.us && nemo.user.users.us.emailAddress, "There was some problem creating a user with POST user");
		//console.log("nemo.user.users.us.emailAddress", nemo.user.users.us.emailAddress)
		done();
	});
	it('should fail to create a user with bad information', function (done) {
		var postData = {
			"counrsssy": "FE"
		};
		nemo.user.client.post(postData, function (err, data) {
			console.log("err", err, "data", data);
			//console.l
			if (!!err) {
				//console.log("err", err);
				done();
			} else {
				done(new Error("didn't get back an error"));
			}
		});
	})
	it('should get user info via email address', function (done) {
		nemo.user.client.findByEmail("medelman-merch@paypal.com", function (err, data) {
            console.log(data.accountNumber);
			if (!!err) {
				done(err)
			} else if (!data.emailAddress) {
				//console.log(data)
				done(new Error("didn't get back an email address"))
			} else {
				//console.log("data.firstName", data.firstName);
				done();
			}
		});
	});
	it('should update user info via put and account number @userPut@', function (done) {
		nemo.user.client.findByEmail("medelman-merch@paypal.com", function (err, data) {
			var accountNumber = data.accountNumber;
			//console.log("accountNumber", accountNumber);
			var putData = {
				"accountNumber": accountNumber,
				"fund": [
					{
						"currency": "USD",
						"fundsInCents": "12000"
					}
				]
			};
			nemo.user.client.put(putData, function (err, data) {
				if (!!err) {
					done(err);
				}
				console.log("herrree??")
				if (data.fund && data.fund[0].fundsInCents === 12000 && data.fund[0].message.indexOf("success") !== -1) {
					done();
				} else {
					done(new Error("Didn't add $120.00 as expected"));
				}
			});
		});
	});
	it('should get user info via get and account number @userGet@', function (done) {
		nemo.user.client.findByEmail("medelman-merch@paypal.com", function (err, data) {
			var accountNumber = data.accountNumber;
			//console.log("accountNumber", accountNumber);
			var putData = {
				"accountNumber": accountNumber
			};
			nemo.user.client.put(putData, function (err, data) {
				if (!!err) {
					done(err);
				}
				if (data.emailAddress && data.emailAddress === "medelman-merch@paypal.com") {
					done();
				} else {
					done(new Error("Didn't get email address back as medelman-merch@paypal.com"));
				}
			});
		});
	});
});

//TODO: write one or more tests to make sure plugins and setup config are being taken correctly
