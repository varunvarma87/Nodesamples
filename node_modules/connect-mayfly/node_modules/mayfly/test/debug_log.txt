Message { Header { magic = 0xdeefcafe; message_size = 41; header_size = 40; direction = 2; site_id = 0; sender_type = 2 DirectoryServer; sender = 10.57.124.125:10368; recipient = 10.244.173.22:51264; application_name_size = 0; operation_msg_size = 0; }application name: {} { operation_type = 0 NOP; operation_mode = 0; replicate = 0; operation_status = 0; record_info RecordInfo {namespace: , key_size = 0, no key, create_time: 0, life_time: 0, version: 0} request_id 0.0.0.0-0-0-0 payload_data_size = 0; optional_data_size = 0}}



Message { Header { magic = 0xdeefcafe; message_size = 41; header_size = 40; direction = 1; site_id = 0; sender_type = 1 Client; sender = 10.244.173.22:51264; recipient = 10.57.124.125:10368; application_name_size = 0; operation_msg_size = 0; }application name: {} { operation_type = 0 NOP; operation_mode = 0; replicate = 0; operation_status = 0; record_info RecordInfo {namespace: , key_size = 0, no key, create_time: 0, life_time: 0, version: 0} request_id 0.0.0.0-0-0-0 payload_data_size = 0; optional_data_size = 0}}



deefcafe0000003500000028000000000000000b0af4ad160a397c7dca7228800001000100000000fd546573744e6f646541707000


/**
 * Build OperationMsg (N bytes)
 *  
 *  Header (24 bytes)
 *      Record Info Size (4 bytes)
 *      Request ID Size (4 bytes)
 *      Optional Data Size (4 bytes)
 *      Payload Data Size (4 bytes)
 *      Operation Type (2 bytes)
 *      Operation Mode (1 byte)
 *      Replicate State (1 byte)
 *      Operation Status (2 bytes)
 *      Filler (2 bytes) - to align to 4 byte boundary  NOTE: on the response those bytes can be random values (!= 0x00)
 *  Record Info Data Tag (1 byte) = 0x01
 *  Record Info
 *      Record Info Header
 *          Create Time (4 bytes) - "UNIX Time" = seconds since 1.1.1970
 *          Lifetime (4 bytes)
 *          Version (2 bytes)
 *          Namespace Size (2 bytes)
 *          Key Size (2 bytes)
 *          Filler (2 bytes) - to align to 4 byte boundary
 *      Namespace Data Tag (1 byte) = 0x01
 *      Namespace (0 - N bytes)
 *      Key Data Tag (1 byte) = 0x02
 *      Key (0 - M bytes)
 *      End of Record Info Data Tag (1 byte) = 0x00
 *  Request ID Data Tag (1 byte) = 0x02
 *  Request ID
 *      Size (2 bytes)
 *      Host IP (4 bytes)
 *      PID (4 bytes)
 *      Requesting Time (4 bytes)
 *      Serial Number (2 bytes)
 *      Filler (2 bytes) - 0x0000 - NOTE: this filler is only present on the outbound (to the server) message and not on the response (from the server)
 *  Optional Data Tag (1 byte) = 0x04 - only if Optional Data Size > 0
 *  Optional Data (0 - N bytes) - only if Optional Data Size > 0
 *  Payload Data Tag (1 byte) = 0x03 - only if Paypload Data Size > 0
 *  Payload Data (0 - M bytes) - only if Payload Data Size > 0
 *  End of Operations Message Tag (1 byte) = 0x00
 *
 * @param nameSpace - 
 * @param key - Buffer Key
 * @param payloadData - Buffer
 * @param optionalData - Buffer
 * // TODO nameSpace, Key, version - MayflyContext
 */

00000027 - Record Info Size
00000010 - Request ID Size
00000000 - Optional Data Size
0000000c - Payload Data Size
0001 - Operation Type
00 - Operation Mode
00 - Replicate State
0000 - Operation status
01 - Record Info data tag
00000000 - Create Time
0000001e - lifetime
0000 - version
0007 - namespace size
000d - key size
0000 - filler
01 - namespace tag
4e 6f 64 65 41 70 70 - namespace
02 - Key Data Tag
54 65 73 74 5f 4e 6f 64 65 5f 4b 65 79 - key
00 - end of record Info
02 - request id data tag
0010 - size
0af4ad3b - ip
0000c14d - pid
68c2524f
0000 - serial no
03
54 65 73 74 20 50 61 79 6c 6f 61 64
00






Message { Header { magic = 0xdeefcafe; message_size = 124; header_size = 40; direction = 2; site_id = 0; sender_type = 2 DirectoryServer; sender = 10.57.124.125:10368; recipient = 10.244.173.59:55276; application_name_size = 0; operation_msg_size = 82; }application name: {} { operation_type = 1 Create; operation_mode = 0; replicate = 0; operation_status = 4; record_info RecordInfo {namespace: NodeApp, key_size = 13, key:{Test_Node_Key}create_time: 0, life_time: 30, version: 0} request_id 10.244.173.59-57151-1760343355-0 payload_data_size = 0; optional_data_size = 0}}

1358970009.170561 17334 verbose [WORKER] : Inbound entering state Writing from 10.244.173.59:55276 on fd 6
1358970009.170635 17334 verbose [WORKER] : setting timeout: start = 1358970009:105221 expire = 1363264976:400221
1358970009.170703 17334 debug [WORKER] : <replicate> no rep for unsuccessful operation, owner_id = 149928008
1358970009.170790 17334 verbose [WORKER] : 149928432: Exiting CreateDSProcessor::response_callback. Current state= ( m_state=DONE, m_outstanding_write_data_requests=0, m_outstanding_old_read_requests=0, m_found_key_in_old_group=0, m_outstanding_abort_requests=0, m_outstanding_commit_requests=0, m_failure_responses=0, m_waiting_to_commit=0, m_last_op_status=4 ).



 Decoding Response 

deefcafe - magic
0000007c - message_size
00000028 - header_size
00000052 - operation Msg size
00000000 - Application Name size
0a397c7d - sender's ip
0af4ac2f - receipent ip
2880 - sender's port
e886 - receipient's port
0002 - Sender Type (Check this in response, should be 2 always - means server)
0002 - Direction   (Check this in response, should be 2 always)
00000000 - Site ID

 ## No application name is coming back

dd - Operation msg data tag
00000027 - Record Info Size
00000010 - Request ID Size
00000000 - Optional Data Size
00000000 - Payload Data Size ( create request had no payload data)
0001 - Operation Type
00  - Operation Mode
00 - Replicate State
0004 - Operation status
0000 - filler
01 - Record Info data tag
00000000 - Create Time
0000001e - lifetime
0000 - version
0007 - namespace size
000d - key size
94ff - random filler
01 - namespace tag
4e6f6465417070 - namespace
02 - key data tag
546573745f4e6f64655f4b6579 - key data
00 - end of record Info
02 - request id data tag
0010 - size 
0af4ac2f - ip
00014c55 - pid
69db48fc
000000
00 - msg end tag