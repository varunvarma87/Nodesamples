'use strict';

var camelscore = require('camelscore');

exports = module.exports = function (config, transport) {

    return {
        /**
         * get_issuer_details
         * @param request
         * @param callback
         */
        get_issuer_details: function (request, callback) {
            request = (config.asfSchemaOverride) ? camelscore.underscorify(request) : request;
            var payload = transport.vo('FinancialInstrument::GetIssuerDetailsRequest', request);

            transport({
                service: 'FinancialInstrument::FIIssuerRead',
                operation: 'get_issuer_details',
                data: payload
            }, function (error, response) {
                if (config.asfSchemaOverride && response && response.body) {
                    response.body = camelscore.camelize(response.body);
                }
                callback(error, response);
            });
        },

        /**
         * get_bulk_issuer_details
         * @param request
         * @param callback
         */
        get_bulk_issuer_details: function (request, callback) {
            request = (config.asfSchemaOverride) ? camelscore.underscorify(request) : request;
            var payload = transport.vo('FinancialInstrument::GetBulkIssuerDetailsRequest', request);

            transport({
                service: 'FinancialInstrument::FIIssuerRead',
                operation: 'get_bulk_issuer_details',
                data: payload
            }, function (error, response) {
                if (config.asfSchemaOverride && response && response.body) {
                    response.body = camelscore.camelize(response.body);
                }
                callback(error, response);
            });
        }

    };
};