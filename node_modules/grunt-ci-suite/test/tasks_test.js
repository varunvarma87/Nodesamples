//Mocha test for Grunt Tasks
'use strict';

var assert = require('assert'),
	path = require('path'),
	grunt = require('grunt');

describe('Grunt Store Task test', function () {
	var filePath = path.resolve('test/fixture/input.txt');
	this.timeout(5000);
	grunt.initConfig({
		store : {
			all : {
				src : filePath
			}
		},
		change : {
			options : {
				input : filePath,
				text : 'hello'
			}
		},
		retrieve : {
			all : {
				src : filePath
			}
		}
	});
	//Load Local tasks
	grunt.loadTasks('tasks');
	grunt.registerTask('change','Change the contents of file', function (){
		setTimeout(function() {
			var options = this.options({
				enabled: false
			});
			grunt.file.write(options.input,options.text);
			grunt.log.writeln("File content after Instrument: " + grunt.file.read(options.input));
		}, 1000);
	});
	grunt.file.defaultEncoding = 'utf8';
	var input = grunt.file.read(filePath);
	grunt.log.writeln("File content before Store: " + input);

	it('should succeed', function (next) {
			grunt.task.run(['store', 'change', 'retrieve']);
			grunt.task.start();
			var output = grunt.file.read(filePath);
			grunt.log.writeln("File content after Restore: " + output);
			assert.equal(input, output);
			next();
    });
	
})