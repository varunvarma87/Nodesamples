'use strict';

var path = require('path'),
    ProtoBuf = require('protobufjs');

var resources = path.resolve(__dirname, '..', 'resources');

/**
 * Loading ProtocolV1.proto, which is Protobuf protocol for talking to Sherlock Frontier Server v >= 1.3 .
 */
var protocolBuilderV1 = ProtoBuf.loadProtoFile(path.resolve(resources, 'ProtocolV1.proto'));
var frontierProtoV1 = protocolBuilderV1.build('sherlock.frontier.v1');


module.exports = {
    FrontierProtoV1: frontierProtoV1
};


/*
> require ("./lib/protocolV1)
{   GetSessionReqProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    GetSessionRespProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function],
        Status: { SUCCESS: 1, REDIRECT: 2 } },
    SessionInfoProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    RedirectSessionProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    RegisterReqProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    RegisterRespProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    PostRegisteredReqProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    PostRegisteredRespProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    PostUnregisteredReqProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    PostUnregisteredRespProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    ServerNotificationProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function],
        Type: { SESSION: 1 } },
    SessionNotificationProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function],
        Type: { REDIRECT: 1, EXPIRED: 2 } },
    ServerResponseProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function],
        Status: { SUCCESS: 1, FAILURE: 2 },
        ErrorCode:
        { SERVER_ERROR: 1,
            BAD_CREDENTIALS: 2,
            BAD_REQUEST: 3,
            EXCEEDED_RATE: 4,
            EXCEEDED_QUOTA: 5,
            UPSTREAM_TIMEOUT: 6,
            UPSTREAM_UNAVAILABLE: 7 } },
    ClientRequestProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    ServerMessageProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function],
        Type: { NOTIFICATION: 1, RESPONSE: 2 } },
    MetricSetProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    MetricProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function],
        MetricTypeProto:
        { GAUGE: 1,
            COUNTER: 2,
            COUNTER_CREATE_GAUGE: 3,
            COUNTER_REPLACE_WITH_GAUGE: 4 },
        ValueTypeProto:
        { INT: 1,
          LONG: 2,
          FLOAT: 3,
          DOUBLE: 4 } },
    MetricValueProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    PairProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    SocketAddressProto:
    { [Function]
        decode: [Function],
        decodeDelimited: [Function],
        decode64: [Function],
        decodeHex: [Function] },
    ReqRespTypeProto:
    { GET_SESSION: 1,
        REGISTER: 2,
        POST_REGISTERED: 3,
        POST_UNREGISTERED: 4 },
    PostConcernProto:
    { UNACKNOWLEDGED: 1,
        ACKNOWLEDGED: 2,
        PROCESSED: 3 } }
*/