'use strict';

var assert = require('assert'),
    environment = require('../index');

describe.skip('NODE_ENV', function () {

    it('Default|Dev', function () {
        process.env.NODE_ENV = '';

        assert.equal(environment.isDev(), true);
        assert.equal(environment.isNotStage(), true);
        assert.equal(environment.isNotSandbox(), true);
        assert.equal(environment.isNotProd(), true);


        assert.equal(environment.isNotDev(), false);
        assert.equal(environment.isStage(), false);
        assert.equal(environment.isQA(), false);
        assert.equal(environment.isSandbox(), false);
        assert.equal(environment.isProd(), false);

        assert.equal(environment.isQA(), environment.isStage());
        assert.equal(environment.isProd(), environment.isLive());
        assert.equal(environment.isNotQA(), environment.isNotStage());
        assert.equal(environment.isNotProd(), environment.isNotLive());

        process.env.NODE_ENV = '';
    });

    it('STAGE', function () {
        process.env.NODE_ENV = 'STAGE';

        assert.equal(environment.isNotDev(), true);
        assert.equal(environment.isStage(), true);
        assert.equal(environment.isNotSandbox(), true);
        assert.equal(environment.isNotProd(), true);


        assert.equal(environment.isDev(), false);
        assert.equal(environment.isNotStage(), false);
        assert.equal(environment.isNotQA(), false);
        assert.equal(environment.isSandbox(), false);
        assert.equal(environment.isProd(), false);

        assert.equal(environment.isQA(), environment.isStage());
        assert.equal(environment.isProd(), environment.isLive());
        assert.equal(environment.isNotQA(), environment.isNotStage());
        assert.equal(environment.isNotProd(), environment.isNotLive());

        process.env.NODE_ENV = '';
    });

    it('Sandbox', function () {
        process.env.NODE_ENV = 'Sandbox';

        assert.equal(environment.isNotDev(), true);
        assert.equal(environment.isNotStage(), true);
        assert.equal(environment.isSandbox(), true);
        assert.equal(environment.isNotProd(), true);


        assert.equal(environment.isDev(), false);
        assert.equal(environment.isStage(), false);
        assert.equal(environment.isQA(), false);
        assert.equal(environment.isNotSandbox(), false);
        assert.equal(environment.isProd(), false);

        assert.equal(environment.isQA(), environment.isStage());
        assert.equal(environment.isProd(), environment.isLive());
        assert.equal(environment.isNotQA(), environment.isNotStage());
        assert.equal(environment.isNotProd(), environment.isNotLive());

        process.env.NODE_ENV = '';
    });

    it('LIVE', function () {
        process.env.NODE_ENV = 'LIVE';

        assert.equal(environment.isNotDev(), true);
        assert.equal(environment.isNotStage(), true);
        assert.equal(environment.isNotSandbox(), true);
        assert.equal(environment.isProd(), true);


        assert.equal(environment.isDev(), false);
        assert.equal(environment.isStage(), false);
        assert.equal(environment.isQA(), false);
        assert.equal(environment.isSandbox(), false);
        assert.equal(environment.isNotProd(), false);

        assert.equal(environment.isQA(), environment.isStage());
        assert.equal(environment.isProd(), environment.isLive());
        assert.equal(environment.isNotQA(), environment.isNotStage());
        assert.equal(environment.isNotProd(), environment.isNotLive());

        process.env.NODE_ENV = '';
    });

});
