'use strict';

var camelscore = require('camelscore');

exports = module.exports = function (config, transport) {
	
    return {
		/**
		 * do_address_normalization
		 * @param request
		 * @param callback
		 */
		do_address_normalization: function (request, callback) {
			request = (config.asfSchemaOverride)? camelscore.underscorify(request) : request;
			var payload = transport.vo('Risk::DoAddressNormalizationRequest', request);
			
			transport({
		        service: 'Risk::DataNormalization',
		        operation: 'do_address_normalization',
		        data: payload
		    }, function (error, response) {
		    	if (config.asfSchemaOverride && response && response.body) {
		    		response.body = camelscore.camelize(response.body);
		    	}
		    	callback(error, response);
		    });
		},
		
		/**
		 * do_address_normalization_async
		 * @param request
		 * @param callback
		 */
		do_address_normalization_async: function (request, callback) {
			request = (config.asfSchemaOverride)? camelscore.underscorify(request) : request;
			var payload = transport.vo('Risk::DoAddressNormalizationAsyncRequest', request);
			
			transport({
		        service: 'Risk::DataNormalization',
		        operation: 'do_address_normalization_async',
		        data: payload
		    }, function (error, response) {
		    	if (config.asfSchemaOverride && response && response.body) {
		    		response.body = camelscore.camelize(response.body);
		    	}
		    	callback(error, response);
		    });
		},
		
		/**
		 * lookup_address
		 * @param request
		 * @param callback
		 */
		lookup_address: function (request, callback) {
			request = (config.asfSchemaOverride)? camelscore.underscorify(request) : request;
			var payload = transport.vo('Risk::LookupAddressRequest', request);
			
			transport({
		        service: 'Risk::DataNormalization',
		        operation: 'lookup_address',
		        data: payload
		    }, function (error, response) {
		    	if (config.asfSchemaOverride && response && response.body) {
		    		response.body = camelscore.camelize(response.body);
		    	}
		    	callback(error, response);
		    });
		}
		
	};
};