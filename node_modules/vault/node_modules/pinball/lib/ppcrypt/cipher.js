'use strict';

var crypto = require('crypto');



function desx(plaintext, key, iv, autopad) {
    return encrypt('desx', plaintext, key, iv, autopad);
}

function undesx(ciphertext, key, iv, autopad) {
    return decrypt('desx', ciphertext, key, iv, autopad);
}



function tripledes(plaintext, key, iv, autopad) {
    return encrypt('des-ede3-cbc', plaintext, key, iv, autopad);
}

function untripledes(ciphertext, key, iv, autopad) {
    return decrypt('des-ede3-cbc', ciphertext, key, iv, autopad);
}



function encrypt(alg, plaintext, key, iv, autopad) {
    var cipher, result;

    cipher = crypto.createCipheriv(alg, key, iv);
    if (autopad !== undefined) {
        cipher.setAutoPadding(autopad);
    }

    // XXX: 'binary' is everywhere for 0.8.x compatibility
    result = cipher.update(plaintext.toString('binary'), 'binary', 'binary');
    result += cipher.final('binary');
    return new Buffer(result, 'binary');
}



function decrypt(alg, ciphertext, key, iv, autopad) {
    var cipher, result;

    cipher = crypto.createDecipheriv(alg, key, iv);
    if (autopad !== undefined) {
        cipher.setAutoPadding(autopad);
    }

    // XXX: 'binary' is everywhere for 0.8.x compatibility
    result = cipher.update(ciphertext.toString('binary'), 'binary', 'binary');
    result += cipher.final('binary');
    return new Buffer(result, 'binary');
}



exports = module.exports = {

    desx: desx,

    undesx: undesx,

    tripledes: tripledes,

    untripledes: untripledes,

    encrypt: encrypt,

    decrypt: decrypt

};


