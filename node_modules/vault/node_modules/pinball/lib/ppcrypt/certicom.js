'use strict';

var bignum = require('bignum'),
    hash   = require('./hash'),
    cipher = require('./cipher');


function encrypt(/* plaintext, password */) {
    throw new Error('Not implemented');
}


function decrypt(ciphertext, password) {
    var tmp, s1, s2, key, iv, plaintext, len;

    tmp = new Buffer(128);
    tmp.fill(0xaa);
    tmp.write(password, 0, 'ascii');
    s1 = hash.sha1(tmp);

    tmp = new Buffer(128);
    tmp.fill(0x55);
    tmp.write(password, 0, 'ascii');
    s2 = hash.sha1(tmp);

    key = Buffer.concat([s1.slice(8, 16), s1.slice(0, 8), s2.slice(0, 8)]);
    iv = s2.slice(8, 16);

    plaintext = cipher.undesx(ciphertext, key, iv, false).toString('hex');
    len = parseInt(plaintext.slice(0, 2), 16);

    return bignum(plaintext.slice(2, (len * 2) + 2), 16);
}


exports = module.exports = {

    encrypt: encrypt,

    decrypt: decrypt

};