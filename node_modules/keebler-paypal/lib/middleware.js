'use strict';

var utils = require('./utils'),
    cookieService = require('servicecore').create('keebler-paypal');


module.exports = function keebler(req, res, next) {
    if (!req.appName) {
        return next();
    }

    //Original res.end function
    var _end = res.end;

    //Wrap res.end to interact with cookie service.
    res.end = function () {
        var args = Array.prototype.slice.call(arguments);

        //Intercept error
        if (/Error|error/.test(args[0])) {
            _end.apply(res, args);
            return;
        }

        //Call cookie service checkout
        cookieService.checkout(req, res, function (error, response) {
            if (error || !response || response.statusCode !== 200) {
                _end.apply(res, args);
            }
            else {
                var logData = {
                    resCookies: utils.getKeeblerCookiesName(response.body.cookieData),
                    cookiesCount: response.body.cookieData.length
                };
                utils.calStatusEvent(0, 'checkout', logData);
                //Clear outbound cookies - no arguments means just blow away the header completely.
                //Note: I disabled this because it looks like only modified cookies will be sent back.
                utils.clearCookies(res);
                //Set cookies.
                utils.setCookies(res, response.body.cookieData, req.protocol === 'https');
                //Call original
                _end.apply(res, args);
            }
        });
    };

    //Check cookies in.
    cookieService.checkin(req, function (error, response) {
        if (!error && response && response.statusCode === 200) {
            var logData = {
                    reqCookies: utils.getCookieNames(req),
                    cookiesCount: response.body.cookieData.length,
                    workingCookies: utils.getKeeblerCookiesName(response.body.cookieData)
                };
            utils.calStatusEvent(0, 'checkin', logData);
            //Replace cookies - we don't touch signed cookies because they are express specific.
            req.cookies = {};

            //Add updated cookies from response.
            response.body.cookieData.forEach(function (cookie) {
                req.cookies[cookie.name] = cookie.value;
            });
        }

        next();
    });

};
