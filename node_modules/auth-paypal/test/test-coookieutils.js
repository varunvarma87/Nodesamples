'use strict';

var assert = require('chai').assert,
    cookieutils = require('../lib/cookies/util');

describe('cookie utils', function () {

    it('should configure and include', function () {
        assert.ok(!cookieutils.includedCookiesString({
            'mycookie': '1234'
        }).match(/mycookie/));

        cookieutils.configure({
            include: ['mycookie']
        });

        assert.ok(cookieutils.includedCookiesString({
            'mycookie': '1234'
        }).match(/mycookie/));
    });

    it('should parse cookies', function () {
        var cookies = cookieutils.parseCookies('TVKbnJIgoopqCTftP3PCeQTrLnu=lA-8-eq-igxc68gCVrudziovdAJyfLlhA8BrilKm9opLJ6RhcE_WpDJXupNmfL2dVlt5ePId3r2sKWcucStpuWlWiOwCqrnDul5-hdoqNuNrVFNMEQ4UUJzqMukbM1mPOwIPnG; Domain=.paypal.com; Path=/; Secure; HttpOnly');
        
        assert.ok(cookies.TVKbnJIgoopqCTftP3PCeQTrLnu);
        assert.ok(cookies.TVKbnJIgoopqCTftP3PCeQTrLnu.options);
        assert.ok(cookies.TVKbnJIgoopqCTftP3PCeQTrLnu.options.secure);
        assert.ok(cookies.TVKbnJIgoopqCTftP3PCeQTrLnu.options.httpOnly);
        assert.strictEqual(cookies.TVKbnJIgoopqCTftP3PCeQTrLnu.options.path, '/');
        assert.strictEqual(cookies.TVKbnJIgoopqCTftP3PCeQTrLnu.options.domain, '.paypal.com');
    });

    it('should set cookies secure on paypal.com', function () {
        var req, res, header, cookie, value, options;

        req = {
            get: function () {
                return 'test.paypal.com';
            },
            protocol: 'https'
        };
        res = {
            cookie: function (c, v, o) {
                cookie = c;
                value = v;
                options = o;
            }
        };
        header = 'TVKbnJIgoopqCTftP3PCeQTrLnu=lA-8-eq-igxc68gCVrudziovdAJyfLlhA8BrilKm9opLJ6RhcE_WpDJXupNmfL2dVlt5ePId3r2sKWcucStpuWlWiOwCqrnDul5-hdoqNuNrVFNMEQ4UUJzqMukbM1mPOwIPnG; Domain=.paypal.com; Path=/; Secure; HttpOnly';

        cookieutils.setCookies(req, res, header);

        assert.ok(cookie);
        assert.strictEqual(value, 'lA-8-eq-igxc68gCVrudziovdAJyfLlhA8BrilKm9opLJ6RhcE_WpDJXupNmfL2dVlt5ePId3r2sKWcucStpuWlWiOwCqrnDul5-hdoqNuNrVFNMEQ4UUJzqMukbM1mPOwIPnG');
        assert.ok(options);
        assert.ok(options.secure);
        assert.ok(options.httpOnly);
        assert.strictEqual(options.path, '/');
        assert.strictEqual(options.domain, '.paypal.com');
    });

});
