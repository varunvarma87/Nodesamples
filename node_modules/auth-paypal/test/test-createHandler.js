'use strict';

var assert = require('chai').assert,
    createHandler = require('../lib/handler');

describe('createHandler', function () {

    it('should error when no handler', function () {
        assert.throws(function () {
            createHandler({}, {}, function () {});
        }, /function or undefined/);
    });

    it('should error when successRedirect not undefined or string', function () {
        assert.throws(function () {
            createHandler(function () {}, {successRedirect: 123}, {}, {}, function () {});
        }, /successRedirect/);

        assert.doesNotThrow(function () {
            createHandler(function () {}, {successRedirect: ''}, {}, {}, function () {});
        });
    });

    it('should error when failureRedirect not undefined or string', function () {
        assert.throws(function () {
            createHandler(function () {}, {failureRedirect: 123}, {}, {}, function () {});
        }, /failureRedirect/);

        assert.doesNotThrow(function () {
            createHandler(function () {}, {failureRedirect: ''}, {}, {}, function () {});
        });
    });

    it('should return function', function () {
        var fn = createHandler(function () {}, {}, {}, {}, function () {});

        assert.strictEqual(typeof fn, 'function');
    });
});
