/*global describe:false, it:false, before:false, beforeEach:false, after:false, afterEach:false*/
'use strict';

var userpaypal = require('../lib/UserPayPal'),
    servicecore = require('servicecore'),
    vault = require('vault'),
    path = require('path'),
    nconf = require('nconf'),
    assert = require('assert');

nconf.file({ file: './test/config.json' });

describe("Testing UserPayPal", function () {

    var headers = {
        Cookie : "",
        PP_REMOTE_ADDR : ""
    };

    before(function (next) {
        this.timeout(20000);

        process.env.SHARE_PWD = 'aardvark';

        var options = {
            dir: path.join(process.cwd(), 'node_modules', 'testkeystore')
        };

        vault.create(options, function (err, pkg) {
            nconf.set('services:servicecore:sessions', pkg.getClientSessions());

            var credentials = pkg.getClientCredentials();

            Object.getOwnPropertyNames(credentials).forEach(function (key)  {
                nconf.set('services:servicecore:' + key, credentials[key]);
            });

            servicecore.configuration = nconf.get('services');

            next();
        });
    });

    it("Get UserPayPal", function (next) {
        this.timeout(5000);

        var actor = {
        	actor_account_number: '1731511286119924231',
        };

        userpaypal.getUserPayPal(actor, function (error, userPayPal) {
            //console.log(JSON.stringify(userPayPal))
        	assert.ok(!error && userPayPal);
        	next();
        });

    });
});
