'use strict';

var passport = require('passport'),
    utils = require('./utils');

var strategies = {
    /**
     * Convenience method for calling the authorize strategy's authenticate method.
     * @param options for passport strategies
     * @param customHandler to use instead of default handler.
     */
    authorize: require('./authorize'),

    /**
     * Convenience method for calling the login strategy's authenticate method.
     * @param options for passport strategies
     * @param customHandler to use instead of default handler.
     */
    login: require('./login'),

    /**
     * Convenience method for calling the logout strategy's authenticate method.
     * @param options for passport strategies
     * @param customHandler to use instead of default handler.
     */
    logout: require('./logout')
};

exports = module.exports = function (options) {
    var passportInit;

    passport.use(new strategies.authorize.Strategy());
    passport.use(new strategies.login.Strategy());
    passport.use(new strategies.logout.Strategy());

    passportInit = passport.initialize(options);

    return function initialize (req, res, next) {
        passportInit(req, res, function (error) {
            if (error) {
                next(error);
                return;
            }
            if (req.securityContext && req.securityContext.actor.auth_state === 'LOGGEDIN') {
                utils.getUser(req, function (error, user) {
                    next(error);
                });
                return;
            } 
            next();
        });
    };
};

exports.authorize = strategies.authorize;
exports.login = strategies.login;
exports.logout = strategies.logout;
