'use strict';

var clc = require('cli-color'),
	util = require('util');

var colors = {
	debug: 'yellow',
	info: 'blue',
	warn: 'cyan',
	error: 'red',
	server: 'magenta', // server response get its own color for extra readability
	BIZ: 'redBright',
	default: 'yellow'
};

module.exports = function (level, error) {

	var color = colors[level] || colors.default,
		name = level.toUpperCase().substr(0, 1) + level.slice(1),
		msg;

	// parse the extra data out of the extra property
	var extra = error.extra || {};
	var serverResponse;
	try {
		// DefaultError stringifies() the .extra property
		if (typeof extra === 'string') {
			extra = JSON.parse(error.extra);

		// but we'll be nice and support it even if they don't
		} else if (error.extra) {
			extra = error.extra;
		}

		// try to read the server response
		serverResponse = extra.serverResponse;
	} catch (e) {
		console.log(e, extra);
	}

	// if the server response exists let's log that
	if (serverResponse) {
		console.log(clc[colors.server]('Server response:\n', util.inspect(serverResponse, {depth: null})));
	}

	// try stack otherwise message
	if (typeof error.stack === 'string') {
		console.log(clc[color](error.stack.replace('Error', 'Stack trace')));
	} else if (error.message) {
		console.log(clc[color](name + ': ' + error.message));
	} else {
		msg = typeof error === 'object' ? util.inspect(error, { depth: null }) : error;
		console.log(clc[color](name + ': ' + msg));
	}

};