'use strict';

var cls = require('continuation-local-storage');
var constants = require('./constants');
var debug = require('debug')('cal:nsutils');
var ns = cls.getNamespace(constants.CLS_NS) ||
        cls.createNamespace(constants.CLS_NS);

module.exports = {
    namespace: function () {
        return ns;
    },
    bindEmitter: function () {
        ns.bindEmitter.apply(ns, arguments);
    },
    run: function run() {
        ns.run.apply(ns, arguments);
    }
};

module.exports.get = module.exports.getValue = function getValue(name, defaultValue) {
    try {
        return ns.get(name) || defaultValue;
    }
    catch (err) {
        debug('getValue: no CAL context for name: %s, value: %s', name, defaultValue);
        return defaultValue;
    }
};

module.exports.set = module.exports.setValue = function setValue(name, value) {
    try {
        ns.set(name, value);
    }
    catch (err) {
        debug('setValue: no CAL context, using non context storage for name: %s', name);
    }
};
