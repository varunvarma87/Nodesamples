'use strict';

var cal = require('../lib'),
    Config = require('./fixtures/config'),
    calMockServer = require('./fixtures/mockcalserver'),
    CalTestUtils = require('./fixtures/caltestutils');

var caltestutils = new CalTestUtils(cal, null, calMockServer),
    TIMEOUT = CalTestUtils.TIMEOUT,
    SERVER_START_TIMEOUT = Math.floor(TIMEOUT * 0.4),
    CONNECT_TIMEOUT = Math.floor(TIMEOUT * 0.8);

describe('full queue cal server', function () {

    before(function (next) {
        cal.setDefaultWriteStream('cal', {
            poolname: Config.calPool,
            environment: '',
            host: '127.0.0.1',
            port: 1201
        });
        cal.defaults.formatter = cal.formatter.cal;
        setTimeout(function () {
            console.log('starting cal server asynchronously');
            calMockServer.listen(1201, function () {});
        }, SERVER_START_TIMEOUT);

        next();
    });

    after(function (next) {
        this.timeout(10000);
        cal.stop(function () {
            setTimeout(function () {
                calMockServer.clearLocalCache();
                calMockServer.stopServer();
                next();
            }, 1000);
        });
    });

    it('should flush events from txn in case of long cal event queue', function (next) {
        this.timeout(TIMEOUT);
        caltestutils.transAll_long_mock(null, CONNECT_TIMEOUT, next);
    });
});
