'use strict';

var assert = require('assert'),
    async = require('async'),
    cls = require('continuation-local-storage');

var ns;

describe('continuation-local-storage', function () {

    before(function () {
        ns = cls.createNamespace('test');
    });

    after(function () {
        cls.destroyNamespace('test');
    });

    describe('async parallel', function () {

        var clsOne = function clsOne(id, callback) {
            setTimeout(function () {
                assert.equal(id, ns.get('id'));
            }, 30);

            setTimeout(function () {
                assert.equal(id, ns.get('id'));
            }, 50);

            setTimeout(function () {
                assert.equal(id, ns.get('id'));
                callback();
            }, 100);
        };

        it('should result in unique ns ids', function (next) {
            var id = 1;
            var clsTwo = function (n, cb) {
                id++;
                ns.run(function () {
                    ns.set('id', id);
                    clsOne(id, cb);
                });
            };
            async.times(10, clsTwo,
            function () {
                setTimeout(function () {
                    next();
                }, 100);
            });
        });

    });
});
