'use strict';

var cal = require('../lib'),
    Config = require('./fixtures/config'),
    CalTestUtils = require('./fixtures/caltestutils');

var caltestutils = new CalTestUtils(cal),
    TIMEOUT = 3 * CalTestUtils.TIMEOUT;

describe('No cal server', function () {

    before(function (next) {
        cal.setDefaultWriteStream('cal', {
            poolname: Config.calPool,
            environment: '',
            host: '127.0.0.1',
            port: 1117
        });
        cal.defaults.formatter = cal.formatter.cal;
        next();
    });


    after(function (next) {
        this.timeout(10000);
        cal.stop(function () {
            setTimeout(function () {
                next();
            }, 1000);
        });
    });


    describe('http request structure', function () {

        it('should record a URL transaction with some events and Async transaction', function (next) {
            this.timeout(TIMEOUT);
            caltestutils.tranx_4x(1000, null, function () {
                setTimeout(function () {
                    next();
                }, 1000);
            });
        });

        it('should record a URL transaction with buffering', function (next) {
            this.timeout(TIMEOUT);
            caltestutils.tranx_4x(2000, 'new_name', function () {
                setTimeout(function () {
                    next();
                }, 1000);
            });
        });

    });
});
