'use strict';

var fs = require('fs'),
    constants = require('./const');



function readSync(file) {
    var buffer, i, count, len, size, loc, pointers, hashtable, entries, position;
    var start, mid, end, key, value;

    buffer = fs.readFileSync(file);

    pointers = buffer.slice(0, constants.POINTER_SIZE_IN_BYTES);
    for (i = 4, count = 0, len = constants.POINTER_SIZE_IN_BYTES; i < len; i += 8) {
        count += buffer.readUInt32LE(i);
    }

    hashtable = new Buffer(count * 8);
    for (i = 0, count = 0, len = constants.POINTER_SIZE_IN_BYTES; i < len; i += 8) {
        loc  = pointers.readUInt32LE(i);
        size = pointers.readUInt32LE(i + 4) * 8;
        buffer.copy(hashtable, count, loc, loc + size);
        count += size;
    }

    entries = Object.create(null);
    for (i = 4, len = hashtable.length; i < len; i += 8) {
        position = hashtable.readUInt32LE(i);

        if (position) {
            start = position + 8;
            mid   = start + buffer.readUInt32LE(position);
            end   = mid + buffer.readUInt32LE(position + 4);

            key   = buffer.toString('ascii', start, mid);
            value = buffer.toString('ascii', mid, end);

            (entries[key] || (entries[key] = [])).push(value);
        }
    }

    return entries;
}



exports = module.exports = {
    readSync: readSync
};