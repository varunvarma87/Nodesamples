'use strict';

var _ = require('underscore');

module.exports = {

    formatEndpoint: function (config, params) {
        var formattedEndpoint = config.endpoint;

        if (config.paramType === 'inlineParam' || config.paramType === 'hybrid') {
            Object.keys(params).forEach(function (param) {
                var placeholder,
                    replacement;

                placeholder = '<' + param + '>';

                if (~config.endpoint.indexOf(placeholder)) {
                    replacement = (config.needKey ? param + '/' : '') + params[param];
                    formattedEndpoint = config.endpoint.replace(placeholder, replacement);
                }
            });
        }

        return formattedEndpoint;
    },

    populateHeaders: function (headers, account) {
        var xPaypalSecurityContext = JSON.parse(headers['X-PAYPAL-SECURITY-CONTEXT']);
        xPaypalSecurityContext.actor.account_number = account.accountNumber;
        xPaypalSecurityContext.actor.id = account.id;
        xPaypalSecurityContext.subjects[0].subject.account_number = account.accountNumber;
        headers['X-PAYPAL-SECURITY-CONTEXT'] = JSON.stringify(xPaypalSecurityContext);
    }
};
