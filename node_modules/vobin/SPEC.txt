start = "VO" VERSION-BYTE vo
VERSION-BYTE = 0x01
vo = new-vo | OLD_OBJECT obj-id
new-vo = NEW_OBJECT class-name ( field )* END_OBJECT
NEW-OBJECT = 0x01
END-OBJECT = 0x02
OLD-OBJECT = 0x06
obj-id = vint
class-name = atom

field = start-field field-value END-FIELD
start-field = NEW-FIELD field-name field_type | OLD-FIELD field-id
OLD-FIELD = 0x04
NEW-FIELD = 0x03
END-FIELD = 0x05
field-id = vint
field-name = atom

NULL_BYTE = 0x00

atom = atom-id | new-atom
new-atom = NULL_BYTE len no-null-ascii-string
atom-id = vint
len = vint

field_type = OBJ-FIELD class-name | non-obj-field
non-obj-field = meta-type (primitive-type NULL_BYTE) | ( NULL_BYTE OBJ-FIELD class-name)
meta-type = ( primitive | array | hash-map | pointer | TYPE-UNKNOWN )
PRIMITIVE     = 0x01
OBJ-FIELD     = 0x02
ARRAY         = 0x03
HASH-MAP      = 0x04
POINTER       = 0x05
TYPE-UNKNOWN  = 0x00

primitive-type = ( BOOLEAN | SIGNED-INT-8 | CHAR | UNSIGNED-INT-8 | SIGNED-INT-16
   SHORT | UNSIGNED-INT-16 | USHORT | SIGNED-INT-32 | INT | LONG |
   UNSIGNED-INT-32 | UINT | ULONG | SIGNED-INT-64 | LLONG | UNSIGNED-INT-64 |
   ULLONG | FLOAT | DOUBLE | STRING | CURRENCY | BUFFER )

BOOLEAN         = 0x01
SIGNED-INT-8    = 0x02  CHAR            = 0x02
UNSIGNED-INT-8  = 0x03
SIGNED-INT-16   = 0x04  SHORT           = 0x04
UNSIGNED-INT-16 = 0x05  USHORT          = 0x05
SIGNED-INT-32   = 0x06  INT             = 0x06  LONG            = 0x06
UNSIGNED-INT-32 = 0x07  UINT            = 0x07  ULONG           = 0x07
SIGNED-INT-64   = 0x08  LLONG           = 0x08
UNSIGNED-INT-64 = 0x09  ULLONG          = 0x09
FLOAT           = 0x0a
DOUBLE          = 0x0b
STRING          = 0x0c
CURRENCY        = 0x0d
BUFFER          = 0x0e

value = vo | vint | bool-mem | float-mem | double-mem | string-utf8-val | currency-val |
   buffer-val
array = len value*
bool-mem = byte
float-mem = [in memory - Little Endian)
double-mem = [in memory - Little Endian)
string-utf8-val = len byte*
currency-val = ( CURRENCY-INVALID | currency-code vint )
currency-code = string-utf8-val
CURRENCY-INVALID = 0x00
buffer-val = len byte*

vint = ( NEG_SIGN unsigned-vint | unsigned-vint )
NEG_SIGN = 0xe1
unsigned-vint = <variable length>

   0x00-0x7f : single byte
   0x80-0x3fff : two bytes, first byte must set 0x80 and must clear 0x40
   0x4000-0x1fffffff : four bytes, first byte must set 0xC0 and must clear 0x20
   0x20000000-0xffffffffffffffff : eight bytes, prefixed with byte 0xE0
   0xE1 is used as a prefix in front of negative values.
   The data bytes are written in big-endian order.

0xxx xxxx (1 byte): 0000 0000 - 0111 1111
10xx xxxx xxxx xxxx (2 bytes): 1000 0000 - 0011 1111 1111 1111
110x xxxx xxxx xxxx (4 bytes): 0100 0000 0000 0000 - 0001 1111 1111 1111 1111 1111 1111 1111 :
1110 xxxx xxxx xxxx (9 bytes): 0010 0000 0000 0000 0000 0000 0000 0000 -
*/


Here is a sample binary VO
<verbatim>
564f0101001254657374446f6d61696e3a3a54657374564f0300046e616d6501
0c000d48656c6c6f2c20576f726c6421050300097175616c6966696572010c00
097175616c696669657205030005666c61677303010002010005030009737562
73747275637402001554657374446f6d61696e3a3a53756254657374564f0106
0300046e6f7465010c0007542e412e542e550502050300066275636b65740300
02060106020502

564f01 - "VO" version-byte
01 - new-object (1)
001254657374446f6d61696e3a3a54657374564f - atom (1)
03 - new-field
00046e616d65 - atom (2)
010c00 - primitive string type-not-complex
0d48656c6c6f2c20576f726c6421 - string-val
0503 - end-field new-field
00097175616c6966696572 - atom (3)
010c00 - primitive string type-not-complex
097175616c6966696572 - string-val
0503 - end-field new-field
0005666c616773 - atom (4)
030100 - array bool type-not-complex
020100 - len bool-mem bool-mem
0503 - end-field new-field
0009737562737472756374 - atom (5)
02 - meta-type-obj
001554657374446f6d61696e3a3a53756254657374564f - atom (6)
  01 - new obj (2)
  06 - atom-id
  03 - new-field
  00046e6f7465 - atom (7)
  010c00 - primitive string type-not-complex
  07542e412e542e55 - string-val
  0502 - end-field end-object
0503 - end-field new-field
00066275636b6574 - atom (8)
03000206 - array type-unknown meta-type-obj atom-id
01 - array-length
  0602 - object-ref object-id
0502 - end-field end-object
</verbatim>