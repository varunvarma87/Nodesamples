'use strict';

var hammer = require('hammertime'),
    cls = require('continuation-local-storage'),
    servicecore = require('../lib'),
    profiler = require('../lib/transport/profiler'),
    express = require('express');

var client, server, app, calns, ns;

calns = cls.createNamespace('PayPal');
ns = cls.createNamespace('servicecore');

servicecore.configuration = {
    'servicecore': {
        rejectUnauthorized: true
    },
    'client': {
        transport: 'nothing',
        protocol: 'http',
        hostname: 'localhost',
        port: '3000',
        path: '/'
    }
};

servicecore.transports.register('nothing', function (config) {
    return function (options, callback) {
        callback(null, {
            statusCode: 200,
            req: {
                socket: {}
            }
        });
    };
});

//servicecore.transports.wrap('nothing', profiler());

servicecore.register('client', function (config, transport) {
    return {
        invoke: function (callback) {
            transport({}, callback);
        }
    };
});

client = servicecore.create('client');

hammer({
    iterations: 5000,
    after: function (results) {
        console.log('client.function(): %d operations/second.', results.ops);
    }
})
.time(function (next) {
    ns.run(function() {
        ns.set('appName', 'servicecore');
        ns.set('correlationId', '1234');
        ns.set('pageStartTime', Date.now());
        ns.set('remoteAddress', '127.0.0.1');
        ns.set('ip', '127.0.0.1');

        client.invoke(function (error, response) {
            if (error) {
                throw error;
            }
            next();
        });
    });
});
