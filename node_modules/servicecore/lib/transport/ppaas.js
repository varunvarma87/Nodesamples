'use strict';

var httpunch = require('httpunch'),
    entrypoint = require('entrypoint-paypal'),
    objutil = require('objutil'),
    clone = require('lodash.clone'),
    genericTransport = require('./generic'),
    utils = require('../utils');

/**
 *
 * @type {exports}
 */
module.exports = function (config) {
    var transport = genericTransport(config);

    return function restTransport(options, callback) {
        var inreq, req, securityContext;

        inreq = utils.localStorage().get('req');

        //Generate the paypal-entry-point (as would be done by PlatformAPIServ)
        if (inreq) {
            securityContext = clone(inreq.securityContext);
            options.headers['paypal-entry-point'] = inreq.entrypoint;

            if (securityContext) {
                //Only replace when session token based. AT should respect scopes.
                if (securityContext.auth_token_type === 'SESSION_TOKEN' && options.scopes && options.scopes.length) {
                    securityContext.scopes = options.scopes;
                }
                options.headers['x-paypal-security-context'] = JSON.stringify(securityContext);
            }
        }

        options.headers.accept = options.headers.accept || 'application/json';
        options.headers['content-type'] = options.headers['content-type'] || utils.supportsBody(options.method) && 'application/json';

        return transport(options, callback);
    };
};
