'use strict';

var assert = require('assert'),
    ServiceHelper = require('../ServiceHelper');

describe('ServiceFactoryTests', function () {
    var serverConfig = {
        "scheme": "https",
        "host": "live.qa.paypal.com",
        "port": "12300"
    };


    it('should build the xPaypalSecurityContext given the account number and Id', function (next) {
        var account = {
                accountNumber: '1960919171126384213',
                id: '85390'
            },
            expected = '{"actor":{"account_number":"1960919171126384213","id":"85390","auth_claims":["USERNAME","PASSWORD"]},"scopes":["*"],"subjects":[{"subject":{"account_number":"1960919171126384213","auth_claims":["USERNAME","PASSWORD"],"auth_state":"LOGGEDIN","id":"85390"}}]}',
            actual,
            headers = {};

        ServiceHelper.populateHeaders(headers, account);

        actual = headers['X-PAYPAL-SECURITY-CONTEXT'];

        assert.equal(expected, actual);
        next();
    });


    it('should build the url', function (next) {
        var config = {
            'endpoint': 'v1/wallet/card-accounts',
            'action': 'GET',
            'paramType': 'inlineParam',
            'needKey': false
        };
        var result = ServiceHelper.formatEndpoint(config, {"set_default_payment_method": "On"});
        assert.equal('v1/wallet/card-accounts', result);
        next();
    });
});


