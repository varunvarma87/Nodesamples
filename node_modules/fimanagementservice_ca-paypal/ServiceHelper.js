"use strict";

var xpaypalcontext = require('./xpaypalcontext');

var ACTOR_TYPE = {
	NONE: 0,
	ANONYMOUS: 1,
	USER_LOGIN: 2,
	ADMIN: 3,
	SERVER: 4,
	GOD: 5,
	BATCH: 6,
	ANON_USER: 7,
	API: 8,
	GUEST_USER: 9,
	AUTHORIZED_API: 10,
	MANAGED_QUEUE: 11
};

module.exports = {

	formatEndpoint: function (config, params) {

		var formattedEndpoint = config.endpoint;
		if (config.paramType === 'inlineParam' || config.paramType === 'hybrid') {

			Object.keys(params).forEach(function (param) {
				var placeholder, replacement;
				placeholder = '<' + param + '>';
				if (~config.endpoint.indexOf(placeholder)) {
					replacement = (config.needKey ? param + '/' : '') + params[param];
					formattedEndpoint = formattedEndpoint.replace(placeholder, replacement);
				}
			});
		}
		return formattedEndpoint;
	},

	populateHeaders: function (headers, account) {
		var self = this;
		//populate the security context
		self._populateSecurityContext(headers, account);
		//populate headers required by risk
		self._populateRiskHeaders(headers, account);
		headers['Content-Type'] = 'application/json';
	},

	_populateSecurityContext: function(headers, account) {
		//load the paypal security context header
		var xPaypalSecurityContext = JSON.parse(xpaypalcontext['X-PAYPAL-SECURITY-CONTEXT']);

		xPaypalSecurityContext.actor.account_number = account.accountNumber;
		xPaypalSecurityContext.actor.id = account.id;
		if (account.actorSessionId) {
			xPaypalSecurityContext.global_session_id = account.actorSessionId;
		}
		xPaypalSecurityContext.subjects[0].subject.account_number = account.accountNumber;
		xPaypalSecurityContext.subjects[0].subject.id = account.id;
		if (account.actorType === ACTOR_TYPE.GUEST_USER) {
			xPaypalSecurityContext.actor.auth_state = 'ANONYMOUS';
			xPaypalSecurityContext.actor.auth_claims = [];
			xPaypalSecurityContext.auth_state = 'ANONYMOUS';
			xPaypalSecurityContext.auth_claims = [];
			xPaypalSecurityContext.subjects[0].subject.auth_state = 'ANONYMOUS';
			xPaypalSecurityContext.subjects[0].subject.auth_claims = [];
		}

		//set the paypal security context header
		headers['X-PAYPAL-SECURITY-CONTEXT'] = JSON.stringify(xPaypalSecurityContext);
	},

	_populateRiskHeaders: function(headers, account) {
		//add more headers with Risk data
		if (account.agent || account.httpUserAgent) {
			headers['user-agent'] = account.agent || account.httpUserAgent;
		}
		if (account.fso) {
			headers['fso_id'] = account.fso;
		}
		if (account.vid || account.visitorId) {
			headers['visitor_id'] = account.vid || account.visitorId;
		}
		if (account.entryPoint) {
			headers['paypal-entry-point'] = account.entryPoint;
		}
		if (account.referer || account.httpReferrer) {
			headers['http_referer'] = account.referer || account.httpReferrer;
		}
		if (account.lang) {
			headers['lang'] = account.lang;
		}
		if (account.http_accept_language || account.httpAcceptLang) {
			headers['http_accept_language'] = account.http_accept_language || account.httpAcceptLang;
		}
		if (account.os_type) {
			headers['os_type'] = account.os_type;
		}
	}
};
