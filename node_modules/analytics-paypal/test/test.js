'use strict';
process.env.NODE_ENV = 'test';

var assert = require('assert'),
    app = require('./fixtures/index'),
    querystring = require('querystring'),
    analyticsHelper = require('../lib/utils/analytics-helper');

function extractData(body) {
    var fptiData;
    assert.ok(body);

    fptiData = body.substring(body.indexOf('setup({data:') + 13);
    fptiData = fptiData.substring(0, fptiData.indexOf(', url:') - 1);
    fptiData = querystring.parse(fptiData);

    return fptiData;
}

describe('Analytics', function () {

    before(function (next) {
        delete process.env.DEPLOY_ENV;
        app.start({}, next);
    });


    after(function (next) {
        this.timeout(3000);
        setTimeout(function () {
            app.stop(next);
        }, 2000);
    });

    it('sample request', function (next) {

        app.inject('/', function (err, body) {
            assert.ok(!err);
            assert.strictEqual(body, 'hello world');
            next();
        });

    });

    it('sample inside folder dust file request', function (next) {

        app.inject('/insidefolder', function (err, body) {
            assert.ok(!err);
            assert.ok(body.indexOf('hello inside folder world') !== -1);
            assert.ok(body.indexOf('"devpaypalglobal"') !== -1);
            assert.ok(body.indexOf('walletexpnodeweb/public/templates/summary/index.dust') !== -1);
            next();
        });

    });

    it('sample siteCatalyst', function (next) {


        app.inject('/sc', function (err, body) {
            assert.ok(!err);
            assert.ok(body.indexOf('s.pageName="main:walletweb:::home"') !== -1);
            assert.ok(body.indexOf('scOnload') !== -1);
            assert.ok(body.indexOf('//www.paypalobjects.com/js/site_catalyst/pp_jscode_080706.js') !== -1);
            assert.ok(body.indexOf('/devpaypalglobal/') !== -1);
            next();
        });

    });

    it('sample FPTI', function (next) {


        app.inject('/fpti', function (err, body) {
            assert.ok(!err);
            assert.ok(body);

            var fptiData = extractData(body);
            assert.ok(fptiData.pgrp === 'main:walletweb:shop::home');
            assert.ok(fptiData.tmpl === 'walletexpnodeweb/public/templates/transfer/index.dust');
            assert.ok(fptiData.pgtf === 'Nodejs');
            assert.ok(fptiData.fptiKey === 'value');
            assert.ok(fptiData.s === 'ci');

            assert.ok(body.indexOf('PAYPAL.analytics.setup') !== -1);
            assert.ok(body.indexOf('tracking.qa.paypal.com') !== -1);
            next();
        });

    });

    it('sample FPTI with Qualifier', function (next) {

        app.inject('/fptiQualifier', function (err, body) {
            assert.ok(!err);
            assert.ok(body);

            var fptiData = extractData(body);
            assert.ok(fptiData.pgtf === 'Nodejs');
            assert.ok(fptiData.fptiKey === 'value');
            assert.ok(fptiData.s === 'ci');
            assert.ok(fptiData.qual === 'noActivity');

            assert.ok(body.indexOf('PAYPAL.analytics.setup') !== -1);
            next();
        });

    });

    it('sample FPTI with new page with Qualifier and no buzname', function (next) {

        app.inject('/newPageFptiQualifier', function (err, body) {
            assert.ok(!err);
            assert.ok(body);

            var fptiData = extractData(body);
            assert.ok(fptiData.pgtf === 'Nodejs');
            assert.ok(fptiData.boolTrue === 'true');
            assert.ok(fptiData.boolFalse === 'false');
            assert.ok(!fptiData.nullKey);
            assert.ok(fptiData.s === 'ci');
            assert.ok(fptiData.qual === 'myNewQual');

            assert.ok(body.indexOf('PAYPAL.analytics.setup') !== -1);
            next();
        });

    });

    it('sample FPTI with flushServerSide', function (next) {


        app.inject('/fptiFlush', function (err, body) {
            assert.ok(!err);
            assert.ok(body.indexOf('PAYPAL.analytics.setup') !== -1);
            assert.ok(body.indexOf('fptiKey=value') !== -1);
            assert.ok(body.indexOf('tracking.qa.paypal.com') !== -1);
            next();
        });

    });

    it('sample JSON request', function (next) {


        app.inject('/json', function (err, body) {
            assert.ok(!err);
            body = JSON.parse(body);
            assert.ok(body.viewName, 'home');
            assert.ok(body.sys);
            assert.ok(body.sys.tracking);
            assert.ok(body.sys.tracking.fpti);
            assert.ok(body.sys.tracking.fpti.name === 'pta');
            assert.ok(body.sys.tracking.fpti.serverURL === 'https://tracking.qa.paypal.com/webapps/tracking/ts');
            next();
        });

    });

    it('utility helper', function (next) {
        assert.ok(analyticsHelper.convertAccountType('GUEST') === 'guest');
        assert.ok(analyticsHelper.convertAccountType('ANONYMOUS') === 'anon');
        assert.ok(analyticsHelper.convertAccountType('PERSONAL') === 'personal');
        assert.ok(analyticsHelper.convertAccountType('PERSONAL', true) === 'student-personal');
        assert.ok(analyticsHelper.convertAccountType('PREMIER') === 'premier');
        assert.ok(analyticsHelper.convertAccountType('PREMIER', true) === 'student-premier');
        assert.ok(analyticsHelper.convertAccountType('BUSINESS', false) === 'business');
        assert.ok(analyticsHelper.convertAccountType('BUSINESS', true) === 'student-business');

        assert.ok(analyticsHelper.getFlowEvent('signup start').fptiGoal === 'sust');
        assert.ok(analyticsHelper.getFlowEvent('signup done').fptiGoal === 'sudn');

        assert.ok(analyticsHelper.getFlowEvent('payment done').isSignupFlow === false);
        assert.ok(analyticsHelper.getFlowEvent('payment start').fptiGoal === 'txns');

        assert.ok(analyticsHelper.getFlowEvent('').fptiGoal === 'fwgt');

        assert.ok(analyticsHelper.getFlowEvent('abcd done').scEventName === 'event24');
        assert.ok(analyticsHelper.getFlowEvent('pqrs start').fptiGoal === 'flst');

        next();
    });
});


describe('Analytics with Config override', function () {

    before(function (next) {
        delete process.env.DEPLOY_ENV;
        app.start({isOverride: true}, next);
    });

    after(function (next) {
        this.timeout(3000);
        setTimeout(function () {
            app.stop(next);
        }, 2000);
    });

    it('sample request', function (next) {

        app.inject('/', function (err, body) {
            assert.ok(!err);
            assert.strictEqual(body, 'hello world');
            next();
        });

    });

    it('sample FPTI', function (next) {

        app.inject('/fpti', function (err, body) {
            assert.ok(!err);
            assert.ok(body);

            var fptiData = extractData(body);
            assert.ok(fptiData.pgrp === 'main:walletweb:shop::home');
            assert.ok(fptiData.tmpl === 'walletexpnodeweb/public/templates/transfer/index.dust');
            assert.ok(fptiData.pgtf === 'Nodejs');
            assert.ok(fptiData.fptiKey === 'value');
            assert.ok(fptiData.s === 'ci');

            assert.ok(body.indexOf('PAYPAL.analytics.setup') !== -1);
            assert.ok(body.indexOf('fptiKey=value') !== -1);
            assert.ok(body.indexOf(app.getConfig('middleware:analytics:fpti:serverUrl')) !== -1);
            next();
        });

    });
});

describe('Analytics : LIVE simulation', function () {

    before(function (next) {
        //process.env.DEPLOY_ENV = 'LIVE';
        process.env.NODE_ENV = 'production';
        app.start({}, next);
    });


    after(function (next) {
        this.timeout(3000);
        process.env.NODE_ENV = 'test';
        setTimeout(function () {
            app.stop(next);
        }, 2000);
    });

    it('sample inside folder dust file request', function (next) {

        app.inject('/insidefolder', function (err, body) {
            assert.ok(!err);
            assert.ok(body.indexOf('hello inside folder world') !== -1);
            assert.ok(body.indexOf('"devpaypalglobal"') !== -1);
            assert.ok(body.indexOf('walletexpnodeweb/public/templates/summary/index.dust') !== -1);
            next();
        });

    });

    it('sample siteCatalyst', function (next) {

        app.inject('/sc', function (err, body) {
            assert.ok(!err);
            assert.ok(body.indexOf('s.pageName="main:walletweb:::home"') !== -1);
            assert.ok(body.indexOf('scOnload') !== -1);
            assert.ok(body.indexOf('//www.paypalobjects.com/js/site_catalyst/pp_jscode_080706.js') !== -1);
            assert.ok(body.indexOf('/devpaypalglobal/') !== -1);
            next();
        });

    });

    it('sample FPTI', function (next) {

        app.inject('/fpti', function (err, body) {
            assert.ok(!err);
            assert.ok(body);

            var fptiData = extractData(body);
            assert.ok(fptiData.pgrp === 'main:walletweb:shop::home');
            assert.ok(fptiData.tmpl === 'walletexpnodeweb/public/templates/transfer/index.dust');
            assert.ok(fptiData.pgtf === 'Nodejs');
            assert.ok(fptiData.fptiKey === 'value');
            assert.ok(fptiData.s === 'ci');
            assert.ok(body.indexOf('PAYPAL.analytics.setup') !== -1);
            assert.ok(body.indexOf('fptiKey=value') !== -1);
            assert.ok(body.indexOf('//www.paypalobjects.com/pa/js/pa.js') !== -1);
            assert.ok(body.indexOf('www.example.com') !== -1);
            next();
        });

    });

    it('sample FPTI with Qualifier', function (next) {

        app.inject('/fptiQualifier', function (err, body) {
            assert.ok(!err);
            assert.ok(body.indexOf('PAYPAL.analytics.setup') !== -1);
            assert.ok(body.indexOf('fptiKey=value') !== -1);
            assert.ok(body.indexOf('//www.paypalobjects.com/pa/js/pa.js') !== -1);
            assert.ok(body.indexOf('www.example.com') !== -1);
            assert.ok(body.indexOf('qual=noActivity') !== -1);
            next();
        });

    });
});
