'use strict';

/**
 * BuznameRegistry
 */
var cdb = require('cdb'),
    fs = require('fs'),
    path = require('path'),
    tryRequire = require('try-require'),
    cal = tryRequire('cal'),
    assert = require('assert'),
    BuznameData = require('./buzname-data'),
    deployEnv = require('environment-paypal'),
    buzStore = {},
    buznameBasePath,
    CAL_TRANSCATION_TYPE = 'ANALYTICS';

function writeCalEvent(type, key, msg, status) {
    var calEvent;
    status = status || 'ERROR';
    if (cal) {
        calEvent = cal.createEvent(CAL_TRANSCATION_TYPE, type);
        calEvent.status = cal.Status[status];
        calEvent.addData(key, msg);
        calEvent.complete();
    }
}

function isValidBuznamePath(buznameBasePath) {
    var isBuznameBasePathFound = false;
    if (fs.existsSync(buznameBasePath)) {
        isBuznameBasePathFound = true;
    }
    return isBuznameBasePathFound;
}

module.exports = function BuznameRegistry(overrideBasePath) {

    var isBuznamePathFound = false,
        stageName = process.env.STAGE,
        depRootPath = process.env.DEPENDENCY_ROOT;

    // If buznames base path is provided, use it and skip environment check.
    if (overrideBasePath) {
        buznameBasePath = path.join(process.cwd(), overrideBasePath);
        isBuznamePathFound = isValidBuznamePath(buznameBasePath);
    }

    if (!isBuznamePathFound) {
        if (depRootPath) {
            //possible value for depRootPath: /x/web/LIVE
            buznameBasePath = path.join(depRootPath, '/buznames/');
            isBuznamePathFound = isValidBuznamePath(buznameBasePath);
        }
        if (!isBuznamePathFound && stageName) {
            //possible values for stageName: STAGE2XXX, LIVE3, LIVE5, LIVE6...
            buznameBasePath = path.join('/x/web/', stageName, '/buznames/');
            isBuznamePathFound = isValidBuznamePath(buznameBasePath);
        }
    }
    if (!isBuznamePathFound) {
        buznameBasePath = path.join(process.cwd(), '/../../node_modules/analytics-dev-cdbs/cdbs/buznames/');
        isBuznamePathFound = isValidBuznamePath(buznameBasePath);
    }
    if (!isBuznamePathFound && deployEnv.isTest()) {
        buznameBasePath = path.join(process.cwd(), '/node_modules/analytics-dev-cdbs/cdbs/buznames/');
        isBuznamePathFound = isValidBuznamePath(buznameBasePath);
    }

    if (isBuznamePathFound) {
        writeCalEvent('buznames', 'message', 'Loading Buzname CDB from ' + buznameBasePath, 'SUCCESS');
        readBuznames();
    } else {
        writeCalEvent('buznames', 'message', 'Buzname CDB is not configed or loaded');
    }

    return {
        getBuzname : getBuzname,
        getBuzStore : getBuzStore
    };
};

function getBuzname(pagename) {
    return buzStore[pagename];
}

function getBuzStore() {
    return buzStore;
}


function readBuznames() {
    var startTime,
        key,
        entryKey,
        value,
        entries,
        entry,
        qualifier,
        i,
        buzObject,
        buznameData;

    startTime = Date.now();
    buzObject = cdb.readSync(buznameBasePath + 'pagename_map.cdb');

    for (key in buzObject) {
        if (key && key.indexOf('dust') !== -1) {
            value = buzObject[key];
            entries = null;
            entry = null;

            if (value) {
                value = value.join('');
                entries = value.split('|');
            }
            if (entries) {
                for (i = 0; i < entries.length; i++) {
                    entry = entries[i];
                    if (entry) {
                        value = entry.split('%');

                        assert.ok(value.length >= 20);

                        entryKey = key;
                        qualifier = value[1];

                        if (qualifier) {
                            entryKey = key + ':' + qualifier;
                        }

                        buznameData = buzStore[entryKey] = new BuznameData(entryKey);

                        buznameData.set('pagename', value[0]);
                        buznameData.set('qualifier', value[1]);
                        buznameData.set('oldpagename', value[2]);
                        buznameData.set('pagename2', value[3]);
                        buznameData.set('hier1', value[4]);
                        buznameData.set('hier2', value[5]);
                        buznameData.set('hier3', value[6]);
                        buznameData.set('hier4', value[7]);
                        buznameData.set('hier5', value[8]);
                        buznameData.set('website', value[9]);
                        buznameData.set('inout', value[10]);
                        buznameData.set('version', value[11]);
                        buznameData.set('feature', value[12]);
                        buznameData.set('subfeature1', value[13]);
                        buznameData.set('flowgatename', value[14]);
                        buznameData.set('flowname', value[15]);
                        buznameData.set('subfeature2', value[16]);
                        buznameData.set('country', value[17]);
                        buznameData.set('product', value[18]);
                    }
                }
            }
        }
    }
    writeCalEvent('buznames_load', 'time', (Date.now() - startTime) + 'ms', 'SUCCESS');
}
