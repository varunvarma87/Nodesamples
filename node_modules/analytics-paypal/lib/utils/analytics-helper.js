'use strict';

/**
 * Generate accountTypeStr based on accountTypeEnum and youthAccount
 */
module.exports.convertAccountType = function convertAccountType(accountType, isYouthAccount) {
    var accType = 'anon';
    if (accountType) {
        switch (accountType.toUpperCase()) {
        case 'GUEST':
            accType = 'guest';
            break;
        case 'ANONYMOUS':
            accType = 'anon';
            break;
        case 'PERSONAL':
            if (isYouthAccount) {
                accType = 'student-personal';
            } else {
                accType = 'personal';
            }
            break;
        case 'PREMIER':
            if (isYouthAccount) {
                accType = 'student-premier';
            } else {
                accType = 'premier';
            }
            break;
        case 'BUSINESS':
            if (isYouthAccount) {
                accType = 'student-business';
            } else {
                accType = 'business';
            }
            break;
        }
    }
    return accType;
};

/**
 * Calculate the flowEvent info for site catalyst from flowGateName
 */
module.exports.getFlowEvent = function getscEventName(flowGateName) {
    var fCols,
        flowState,
        flowType,
        isSignupFlow = false,
        isTransactionFlow = false,
        isFlowStartPage = false,
        isFlowEndPage = false,
        fptiGoal,
        scEventName;

    fCols = flowGateName.split(new RegExp('\\s'));
    if (fCols && fCols.length > 0) {
        flowType = fCols[0];
        if (flowType) {
            flowType = flowType.trim();
            isSignupFlow = (flowType === 'signup');
            isTransactionFlow = (flowType === 'payment');
        }
        if (fCols.length === 2) {
            flowState = fCols[1];
            if (flowState) {
                flowState = flowState.trim();
                isFlowStartPage = (flowState === 'start');
                isFlowEndPage = (flowState === 'end' || flowState === 'done');
            }
        }
    }

    if (isTransactionFlow) {
        if (isFlowStartPage) {
            scEventName = 'event19';
            fptiGoal = 'txns';
        } else if (isFlowEndPage) {
            scEventName = 'event18';
            fptiGoal = 'txnd';
        } else {
            scEventName = 'event17';
            fptiGoal = 'fwgt';
        }
    } else if (isSignupFlow) {
        if (isFlowStartPage) {
            scEventName = 'scAdd';
            fptiGoal = 'sust';
        } else if (isFlowEndPage) {
            scEventName = 'scCheckout';
            fptiGoal = 'sudn';
        } else {
            scEventName = 'event17';
            fptiGoal = 'fwgt';
        }
    } else {
        if (isFlowStartPage) {
            scEventName = 'event23';
            fptiGoal = 'flst';
        } else if (isFlowEndPage) {
            scEventName = 'event24';
            fptiGoal = 'fldn';
        } else {
            scEventName = 'event17';
            fptiGoal = 'fwgt';
        }
    }
    return {
        scEventName : scEventName,
        fptiGoal: fptiGoal,
        isSignupFlow : isSignupFlow,
        isTransactionFlow : isTransactionFlow
    };
};
