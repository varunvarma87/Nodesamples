/*global describe:false, it:false, before:false*/
'use strict';

var assert = require('assert'),
    properties = require('properties'),
    Stream = require('../lib/stream');


describe('stream', function () {

    var actual;

    before(function (done) {
        var config;

        config = {
            path: true,
            comments: '#',
            separators: '='
        };

        properties.parse('./test/resources/US_cdbdump.txt', config, function (err, results) {
            if (err) {
                done(err);
                return;
            }

            actual = results;
            done();
        });
    });


    describe('US.cdb', function () {

        var reader;
        var data = {};

        it('should stream properties', function (next) {

            var error = undefined;

            reader = new Stream('./test/resources/US.cdb');
            reader.on('data', function (prop) {
                assert(prop);
                data[prop.key] = prop.value;
            });

            reader.on('error', function (err) {
                error = err;
            });

            reader.on('end', function () {
                assert(!error);
                next();
            });

        });

        it('should read the correct number of properties', function () {
            assert.equal(Object.keys(data).length, Object.keys(actual).length);

            // TODO: Assert the values match.
        })

    });

});