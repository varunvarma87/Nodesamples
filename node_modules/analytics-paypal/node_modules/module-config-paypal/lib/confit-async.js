'use strict';

var path = require('path'),
    confit = require('confit_mod'),
    utils = require('./utils'),
    cache = require('memory-cache'),
    debug = require('debug')('modconfig:async');

module.exports = function config(moduleRef, callback) {
    var confiter,
        modRoot,
        cacheKey,
        configObject,
        appConfigRoot,
        moduleConfigRoot,
        confitOption = {};

    modRoot = utils.moduleRoot(moduleRef);
    cacheKey = utils.moduleName(modRoot);
    configObject = cache.get(cacheKey);

    if (configObject) {
        return callback(null, configObject);
    }

    appConfigRoot = path.resolve(process.cwd(), 'config');
    moduleConfigRoot = path.resolve(modRoot, 'config');

    if (appConfigRoot && moduleConfigRoot) {
        confitOption.basedir = appConfigRoot;
    } else {
        confitOption.basedir = moduleConfigRoot;
    }

    debug('confiter basedir : ' + confitOption.basedir);

    confiter = confit(confitOption);

    if (moduleConfigRoot && appConfigRoot && (appConfigRoot !== moduleConfigRoot)) {
        utils.defaultConfig(confiter, moduleConfigRoot);
    }

    confiter.create(function (err, configObject) {

        if (err && !configObject) {
            console.error(err);
        } else {
            configObject.use(utils.mergeWithNconf(configObject._store || {}));
            cache.put(cacheKey, configObject);

        }
        callback(err, configObject);
    });
};
