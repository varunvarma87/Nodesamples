//unique name to map server and client FPTI tracking
{
    "global" : {
        "pgrp" : "global.pageName",     //page group
        "page" : "global.pageName2",    //page name
        "tmpl" : "global.templateName", //template name (.dust file fully qualified name)
        "pgst" : "global.pageLoadStart",    //page load start time
        "lgin" : "global.insidePageString", //user logged in
        "vers" : "global.pageVersion",  //page version from buzname
        "calc" : "global.calCorrelationID", //CAL correlation Id
        "rsta" : "global.rosettaLanguage",  //entity display language (page) en_US, fr_FR ...
        "usce" : "global.controlGroup", //CE2 invite info ??
        "pgtf" : "Nodejs",  //page technology flag
        "s"    : "ci",  //source "ci" for client
        "ccpg" : "global.countryOfPage", //country of page (3 letter country code) from buzname

        "vid"  : "server.visitorID",    //visitor id or fpti guid
        "fpti" : "server.sessionID",    //visit id or session id

        "goal" : "flow.eventName",  //page goal - buzname http://hubworks.corp.ebay.com/Teamworks/Sites4/41616/Tracking%20%20Measurement%20Wiki/FPTI%20Goals.aspx
        "fltp" : "flow.flowGateName",   //flow type - buzname
        "flnm" : "flow.flowName",   //flow name - buzname

        "erpg" : "form.formError",  //page error message
        "erfd" : "form.formFieldWithError", //field on page that caused the error
        "eccd" : "form.hashedErrorCode",    //error code

        "csci" : "UUID",    //client server corelation id

        "cust" : "insidepage.hashedAccountID",  //encryted customer id or payer id
        "acnt" : "insidepage.accountType",  //account type
        "aver" : "insidepage.accountVerifiedString",    //account verified
        "rstr" : "insidepage.accountRestrictedString",  //account restricted
        "pfid" : "insidepage.paymentFlowID",    //encryted payment flow id
        "bztp" : "insidepage.businessType", //business type selected
        "mbtp" : "insidepage.merchantType"  //merchant business type
    },
    "server" : {    //NodeJS Analytics Infra Default (auto) logging

        "cal_correlation_id": "<req.correlationId>",    //CAL correlation Id
        "channel": "<channel>", //remove this
        "enrich": "n", //pass 'n' only if it is server side instrumentation
        "experimentation_guid": "<experimentation.guid>", //experimentation guid
        "uuid": "<req.uuid>",   //unique guid
        "user_session_guid":   "<fpti session guid (visit_id)>", // ts.vt - visit id or session id
        "user_guid": "<fpti user guid (visitor_id)>", // ts.vr - visitor id or fpti guid
        "user_agent":  "<user_agent string>",


        "encr_customer_id": "<account.encryptedAccountNumber>", //encryted customer id
        "framework_call_type": "si",    //source "si" for server
        "http_response_code": 200,
        "device_type": "<deviceInfo.device_type>",
        "device_name": "<deviceInfo.model>",
        "browser_type": "<deviceInfo.browser_type>",
        "browser_version": "<deviceInfo.browserVersion>",
        "client_os": "<deviceInfo.client_os>",

        //TODO - 2
        "mobile_carrier":  "<AT&T, Verizon, Airtel, Orange>",
        "mobile_device_id":  "<device_id - alphanumeric with hypen (idfa,guid, android id etc)>",
        "mobile_device_model": "<iPhone7,1 SH7-GHx, LG-100>",
        "mobile_manufacturer": "<Apple, Samsung, LG, Microsoft etc>",
        "mobile_device_os":  "<mobile os name>",
        "mobile_device_type":  "<iPhone, iPad, iPod Touch, Android Phone, Android Tablet>",
        "mobile_app_version":  "<PayPal mobile app version>",

        "timestamp_serverside_request": "<req.pageStartTime || Date.now()>",    //time stamp for the request received (in epoch ms).
        "timestamp_serverside_response": "<Date.now()>",     //timestamp for the response sent (in epoch ms).
        "server_epoch_timestamp":  "<server timestamp in milli seconds>",

        "buyer_id":    "<log encrypted buyer_id>",
        "buyer_ip":    "<buyers ip address>",

        "int_error": [
            {
                "error_source":    "<the application name the error originated>", //service name of the service failing
                "int_error_code":  "<numeric or alpha-numeric - error codes for errors in current app or communicated from an underlying app>",
                "int_error_desc":  "<descriptions for int_error_codes>"
            }
        ],


        "is_cookied_user": "<Was the user cookied>",    //0 or 1 - check if (user_session or login_email) is present or not

        "pxp_tags": [
            {
                "exp_id":  "<pxp experimentation id>",
                "trtmnt_id":   "<pxp treatment id>"
            }
        ],

        //TODO - 2
        "serverside_data_source":  "<for XO : pass  'checkout' - TBD for others>",
        "context_id":  "<ec_token>",
        "context_type":    "<type of value logged into context_id like 'EC token' or 'Cart id' etc>",
        "payment_activity_id or planning_activity_handle": "<To connect with planning data set (if applicable to the event)>",
        "planning_activity_handle":    "<To connect with planning data set (if applicable to the event)>",
        "pmt_flow_id": "<To connect with risk data set (if applicable to the event)>",
        "seller_id":   "<log encrypted seller_id (if applicable to the event)>",
        "txn_id":  "<log encrypted transaction id (if applicable to the event)>",
        "product_flow":  "<If we have this attribute currently,Â  to identify whether it is send money or pp.me or XO flow>"
    }
}