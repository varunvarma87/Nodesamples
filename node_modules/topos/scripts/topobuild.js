#!/usr/bin/env node
'use strict';

var preLayoutToCDB = require('../lib/preLayoutToCDB'),
    postLayoutToCDB = require('../lib/postLayoutToCDB'),
    deployEnv = require('environment-paypal'),
    path = require('path'),
    fs = require('fs'),
    shell = require('shelljs');


var root = process.cwd(),
    cdbs = path.join(root, 'cdbs'),
    pkg = require(path.join(root, 'package')),
    stageName = process.env.STAGE,
    cmd, cmdPath, child;


console.log('env', process.env.DEPLOY_ENV, 'stageName', stageName, 'Service Configurator', process.env.SERVICE_CONF);

if (deployEnv.isNotDev()) {
    //Use the Serive connection framework instaed for TOPO file and Layout to CDB.
    cmdPath = '/x/opt/pp/bin/configurator';
    var configuratorExists = fs.existsSync(cmdPath);
    if (!configuratorExists) {
        console.log("The configurator tool " + cmdPath + " is not properly installed");
    }
    if (configuratorExists && process.env.SERVICE_CONF) {
        cmd = [];
        cmd.push(cmdPath);
        //Commenting out the ENV option. The configurator tool will take care of this.

        // if (stageName) {
        //     if ((/stage2/i).test(stageName)) {
        //         stageName = "STAGE2";
        //     }
        //     cmd = cmd.concat(['-e', stageName]);
        // }
    } else {
        console.log("Executing LayoutToCdb...");
        preLayoutToCDB();
        cmd = ['/x/opt/pp/bin/LayoutToCdb -layout application.layout -n', pkg.name, '-path', cdbs];
        if (stageName) {
            cmd = cmd.concat(['-stage', stageName]);
        }
    }


    child = shell.exec(cmd.join(' '));
    if (child.code) {
        console.log(child.output);
        shell.exit(child.code);
    }

    postLayoutToCDB();
}
