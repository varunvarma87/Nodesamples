#!/usr/bin/env node

'use strict';

var fs = require('fs'),
    properties = require('properties'),
    biblio = require('./bibliography'),
    objutil = require('./util/objutil'),
    aggregate = require('./layout-aggregator');


var propConfig = {
    comments: "#",
    separators: "=",
    sections: true
};


exports = module.exports = function PreLayoutToCDB() {
    var data;

    //create a temp <AppRoot>/cdbs folder
    if (!fs.existsSync(biblio.dir.cdbs)) {
        fs.mkdirSync(biblio.dir.cdbs);
    }

    // aggregate all layout.JSON
    data = aggregate();

    //writing aggregated layout.json
    fs.writeFileSync(biblio.file.topo.layout, JSON.stringify(data, null, 4), 'utf8');

    // Flatten
    data = objutil.collapse(data);
    data = properties.stringify(data, propConfig);

    //write flattened layout.json to application.layout file
    //console.log(data);
    fs.writeFileSync(biblio.file.applayout, data);
    console.log('application.layout created successfully');

    if (!fs.existsSync(biblio.file.appdef)) {
        fs.createReadStream(biblio.file.template.appdef).pipe(fs.createWriteStream(biblio.file.appdef));
        console.log('application.def created successfully');
    }
};
