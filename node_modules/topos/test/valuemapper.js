/*global describe:false, it:false, before:false, beforeEach:false, after:false*/
'use strict';

var mapper = require('../lib/util/valuemapper'),
    assert = require('chai').assert;

describe('valuemapper', function () {

    describe('replace', function () {

        it('should replace properties named `host` with the provided value', function (next) {
            var obj = {
                host: 'not a host',
                port: 8000,
                service: {
                    host: 'not a host',
                    port: 8001
                },
                cal: {
                    host: '127.0.0.1',
                    port: 1118
                },
                mayfly: {
                    host: '10.20.30.40',
                    port: 10368,
                    ipport: '1:10.20.30.40:10368'
                }
            };

            mapper.replace(obj, 'http://www.paypal.com');
            assert.strictEqual(obj.host, 'http://www.paypal.com');
            assert.strictEqual(obj.port, 8000);

            assert.isObject(obj.cal);
            assert.strictEqual(obj.cal.host, '127.0.0.1');
            assert.strictEqual(obj.cal.port, 1118);

            assert.isObject(obj.mayfly);
            assert.strictEqual(obj.mayfly.host, 'http://www.paypal.com');
            assert.strictEqual(obj.mayfly.port, 10368);
            assert.strictEqual(obj.mayfly.ipport, '1:http://www.paypal.com:10368');

            assert.isObject(obj.service);
            assert.strictEqual(obj.service.host, 'http://www.paypal.com');
            assert.strictEqual(obj.service.port, 8001);
            next();
        });

    });


    describe('replaceTokens', function () {

        var obj;

        beforeEach(function (done) {
            obj = {
                host: '%{mysrv_host}',
                port: '%{mysrv_port}',
                mysrv: {
                    host: '%{mysrv2_host}',
                    port: '%{mysrv2_port}'
                },
                mysrv2: {
                    host: 'http://www.ebay.com',
                    port: 8080
                },
                cal: {
                    host: '127.0.0.1',
                    port: 1118
                },
                mayfly: {
                    host: '%{mayfly_host}',
                    port: '10368',
                    ipport: '%{mayfly_service}'
                },
                ignore: 'this property'
            };
            done();
        });

        it('should replace tokens with host or port, as appropriate', function (next) {
            var host, ports;

            host = 'http://www.paypal.com';
            ports = {
                mysrv: 8000,
                mysrv2: 8001
            };

            mapper.replaceTokens(obj, host, ports);
            assert.strictEqual(obj.host, host);
            assert.strictEqual(obj.port, ports.mysrv);

            assert.isObject(obj.mysrv);
            assert.strictEqual(obj.mysrv.host, host);
            assert.strictEqual(obj.mysrv.port, ports.mysrv2);

            assert.isObject(obj.mysrv2);
            assert.strictEqual(obj.mysrv2.host, 'http://www.ebay.com');
            assert.strictEqual(obj.mysrv2.port, 8080);

            assert.isObject(obj.mayfly);
            assert.strictEqual(obj.mayfly.host, 'http://www.paypal.com');
            assert.strictEqual(obj.mayfly.port, '10368');
            assert.strictEqual(obj.mayfly.ipport, '1:http://www.paypal.com:10368');

            assert.strictEqual(obj.ignore, 'this property');
            next();
        });


        it('should skip tokens for unknown ports', function (next) {
            var host, ports;

            host = 'http://www.paypal.com';
            ports = {
                mysrv: 8000
            };

            mapper.replaceTokens(obj, host, ports);
            assert.strictEqual(obj.host, host);
            assert.strictEqual(obj.port, ports.mysrv);

            assert.isObject(obj.mysrv);
            assert.strictEqual(obj.mysrv.host, host);
            assert.strictEqual(obj.mysrv.port, '%{mysrv2_port}');

            assert.isObject(obj.mysrv2);
            assert.strictEqual(obj.mysrv2.host, 'http://www.ebay.com');
            assert.strictEqual(obj.mysrv2.port, 8080);

            assert.strictEqual(obj.ignore, 'this property');
            next();
        });

    });

});



