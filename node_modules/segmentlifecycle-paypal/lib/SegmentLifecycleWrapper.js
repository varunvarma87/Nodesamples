'use strict';

var camelscore = require('camelscore');

exports = module.exports = function (config, transport) {
	
    return {
		/**
		 * set_segment
		 * @param request
		 * @param callback
		 */
		set_segment: function (request, callback) {
			request = (config.asfSchemaOverride)? camelscore.underscorify(request) : request;
			var payload = transport.vo('Marketing::SetSegmentRequest', request);
			
			transport({
		        service: 'Marketing::SegmentLifecycle',
		        operation: 'set_segment',
		        data: payload
		    }, function (error, response) {
		    	if (config.asfSchemaOverride && response && response.body) {
		    		response.body = camelscore.camelize(response.body);
		    	}
		    	callback(error, response);
		    });
		}
		
	};
};