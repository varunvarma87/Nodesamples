'use strict';

var hammer = require('hammertime'),
    LoginCookie = require('../../lib/loginCookie'),
    PPCrypto = require('ppcryptutils').PPCrypto,
    Deserializer = require('vobin').Deserializer;

var encryptedCookie = 'I9u0HbtGs9uZb5etbnrbAfP1J4i7EzYBQLSA4N85BvDXFHUVnXHAQsz9wH0RTcoN1UZaQ0JqYnYxePRItLsXWjcDJgMFgX41NVkCW7fAteo4FRzye61k2tGq4kMpL8nb8UN2DGCxdHTNjBmKWYy0i-RjougvUEd9w73sHJx9SZy767WT493nHXhuJQJna16UzEhjXa-_5FTvP6dn69l8WUq3lI50bc38WKzSaqbeNzB58rgg_OHd5LL1lD_r2Un1oQ4qi0';

var ppcrypto = new PPCrypto({
    encryptionAlgorithm: 'desx',
    macAlgorithm: 'sha1',
    encryptionKey: new Buffer('1h1P/y6F/kg6OlM7oeTms2Yr6Lw=', 'base64'),
    macKey: new Buffer('SF4HNI/A1U3xPww2eylPqJNQIvU=', 'base64')
});

hammer({
    iterations: 1000,
    after: function (report) {
        console.log('decrypt and deserialize: %d operations/second.', report.ops);
    }
})
.time(function (next) {
    ppcrypto.decodeAndUnsealNamed('user_session', new Buffer(encryptedCookie), function (data) {
        LoginCookie.fromVO(Deserializer.deserialize(data.slice(1, data.length)));
        next();
    });
});