'use strict';

var assert = require('chai').assert,
    encryptedcookies = require('../lib');

describe('CookieParser Config', function () {

    it('should throw on no encryptionKey', function () {
        assert.throws(function () {
            encryptedcookies({
                macKey: new Buffer('SF4HNI/A1U3xPww2eylPqJNQIvU=', 'base64')
            });
        });
    });

    it('should throw on no macKey', function () {
        assert.throws(function () {
            encryptedcookies({
                encryptionKey: new Buffer('1h1P/y6F/kg6OlM7oeTms2Yr6Lw=', 'base64')
            });
        });
    });

    it('should throw on encryptionKey not Buffer or String', function () {
        assert.throws(function () {
            encryptedcookies({
                encryptionKey: 1234,
                macKey: new Buffer('SF4HNI/A1U3xPww2eylPqJNQIvU=', 'base64')
            });
        });
    });

    it('should throw on encryptionKey not Buffer or String', function () {
        assert.throws(function () {
            encryptedcookies({
                encryptionKey: new Buffer('1h1P/y6F/kg6OlM7oeTms2Yr6Lw=', 'base64'),
                macKey: 1234
            });
        });
    });

});