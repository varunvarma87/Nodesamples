'use strict';

var c = require('./constants');

/**
 * Node.js security context container.
 * @param validateResult
 * @param actor
 * @constructor
 */
function SecurityContext(validateResult, actor, token) {
    validateResult = Number(validateResult);

    if (!validateResult) {
        validateResult = 110;
    }
    if (!actor) {
        actor = {};
    }
    if (!token) {
        token = {};
    }

    this.actor = {
        id: actor.actor_id,
        party_id: actor.actor_account_number,
        account_number: actor.actor_account_number,
        auth_state: 'ANONYMOUS',
        auth_claims: undefined
    };

    this.actor.auth_state = resolveAuthState(validateResult, actor.actor_auth_type);

    this.actor.auth_claims = resolveClaims(actor.actor_auth_credential);

    this.subjects = [{
        "subject": this.actor
    }];

    this.auth_token = actor.token;
    this.auth_token_type = 'SESSION_TOKEN';
    this.scopes = [
        '*'
    ];

    this.global_session_id = actor.actor_session_id;
    this.last_validated = token.session_time;
}

function resolveAuthState(validateResult, authType) {
    switch (authType) {
        case 71:
            if (validateResult === 86) {
                return 'IDENTIFIED';
            }
            break;
        case 72:
        case 104:
        case 88:
            return 'PARTIALLY_AUTHENTICATED';
        case 66:
        case 68:
        case 70:
        case 80:
        case 83:
        case 87:
            if (validateResult === 86) {
                return 'LOGGEDIN';
            }
            break;
        case 82:
            return 'REMEMBERED';
        default:
            return 'ANONYMOUS';
    }
}

function resolveClaims(credential) {
    switch (credential) {
        case 78:
            return [
                'PHONE', 'PIN'
            ];
        case 80:
            return [
                'USERNAME', 'PASSWORD'
            ];
        case 65:
            return [
                'GUEST', 'ACCOUNT_NUMBER'
            ];
        default:
            return [];
    }
}

module.exports = SecurityContext;
